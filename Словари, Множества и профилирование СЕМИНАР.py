# Задание 1. Три списка
# Даны три списка.
# array_1 = [1, 5, 10, 20, 40, 80, 100]
# array_2 = [6, 7, 20, 80, 100]
# array_3 = [3, 4, 15, 20, 30, 70, 80, 120]
# Нужно выполнить две задачи:
# 1. найти элементы, которые есть в каждом списке;
# 2. найти элементы из первого списка, которых нет во втором и третьем
# списках.
# Каждую задачу нужно выполнить двумя способами:
# 1. без использования множеств;
# 2. с использованием множеств.
# Пример выполнения на других данных:
# array_1 = [1, 2, 3, 4]
# array_2 = [2, 4]
# array_3 = [2, 3]
# Вывод:
# Задача 1:
# Решение без множеств: 2
# Решение с множествами: 2
# Задача 2:
# Решение без множеств: 1
# Решение с множествами: 1

""" array_1 = [1, 5, 10, 20, 40, 80, 100]
array_2 = [6, 7, 20, 80, 100]
array_3 = [3, 4, 15, 20, 30, 70, 80, 120] """

""" result = []
for i in array_1:
    if i in array_2 and i in array_3:
        result.append(i)
print(result) №1 без множества"""

""" result = set(array_1) & set(array_2) & set(array_3)
print(result) №1 с множествами"""

""" result = []
for i in array_1:
    if i not in array_2 and i not in array_3:
        result.append(i)
print(result)   №2 без множеств """

""" result = set(array_1) - set(array_2) - set(array_3)
print(result) №2 с множествами"""

# Задача 2. Палиндром
# Пользователь вводит строку. Необходимо написать программу, которая
# определяет, существует ли у этой строки перестановка, при которой она станет
# палиндромом. Затем она должна выводить соответствующее сообщение.
# Пример 1
# Введите строку: aab
# Можно сделать палиндромом
# Пример 2
# Введите строку: aabc
# Нельзя сделать палиндромом

""" def is_poly(stroke):
    my_dict = {}
    for i in stroke:
        my_dict[i] = my_dict.get(i,0) + 1
    counter = 0
    for j in my_dict.values():
        if j % 2 !=0:
            counter += 1
    return counter <= 1

my_stroke = input("Введите строку: ")

if is_poly(my_stroke):
    print("Можно сделать палиндром")
else:
    print("Нельзя сделать палиндром") """


""" # Задача 3. Словарь синонимов
# Одна библиотека поручила вам написать программу для оцифровки словарей
# синонимов. На вход в программу подаётся N пар слов. Каждое слово является
# синонимом для своего парного слова.
# Реализуйте код, который составляет словарь синонимов (все слова в словаре
# различны), затем запрашивает у пользователя слово и выводит на экран его
# синоним. Обеспечьте контроль ввода: если такого слова нет, выведите ошибку
# и запросите слово ещё раз. При этом проверка не должна зависеть от регистра
# символов.
# Пример
# Введите количество пар слов: 3
# Первая пара: Привет — Здравствуйте
# Вторая пара: Печально — Грустно
# Третья пара: Весело — Радостно
# Введите слово: интересно
# Такого слова в словаре нет.
# Введите слово: здравствуйте
# Синоним: Привет


n = int(input("Введите количество пар слов: "))
my_dict = {input(f"Введите слово {i + 1}: ").lower(): input(f"Введите синоним {i + 1}: ").lower() for i in range(n)}

my_word = input("Введите слово: ").lower()
result = ""

if my_word not in my_dict.values() and my_word not in my_dict.keys():
    print("Такого слова в словаре нет")
else:
    if my_word in my_dict:
        result = my_dict[my_word].capitalize()
    else:
         for key, value in my_dict.items():
            if value == my_word:
                result = key.capitalize()
                break
print(result) """






